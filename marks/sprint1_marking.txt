Planning Meetings (RPM.md, sprint1.md) (Max 5 marks)
-RPM.md (Release Planning Meeting)
 [3 marks=Meeting is documented, participants are recorded, everyone has participated, Release goals are specified and
  there is sufficient references to user stories to be completed during the release]

-Sprint Planning meeting (sprint1.md)
 [2 marks=Meeting is documented, participants are recorded, everyone has participated, decisions about user stories
  to be completed this sprint are clear, tasks breakdown is done.]

	
User Stories (PB.md, sprint1.md) (Max 10 marks) 
-Correctly formulated user stories 
 [2 marks=all stories in PB.md follow the User Story template]
-Recorded on Jira
 [2 marks=all stories in PB.md recorded on the Tracker]
-Broken down into tasks 
 [2 marks=all Sprint1.md stories estimated, broken into tasks, tasks assigned to team members]

-Estimated
 [2 marks=all stories in PB.md are point estimated and the point value is recorded in the Tracker]
-Prioritized	
 [2 marks=all stories in PB.md are prioritized and the order of priority in PB.md matches the order of priority on the Tracker]
 
Tracking on Jira:  (max 10 marks) 
- Are all your stories present on sprint1.md recorded  on the tracker? 
  [2=all stories recorded]
- Did you start all stories for sprint one? 
  [2=all stories started or some stories not started, but logical explanation provided in the sprint1.md document]
- Do the commits on github match the tasks listed in sprint1.md? 
  [2=no tasks are missing]
- Is the commit done by the person to whom the task has been assigned to? 
  [2=all assignned tasks are completed]
- Tasks Distribution
  [2=every team member had at least one task assigned and completed]
  


System Design - (PDF or MD file or other suitable format) (Max 10 marks) 
- Cover Page and Table of Contents 
  [2 marks: both are present]
  
- CRC Cards [or equivalent, if team is not using CRC)
 [2 marks: Two class names do not match the collaborator names or the responsibilities of two or more classes are not stated or are unclear]
 
 - Each class should have its own CRC model
 - You need to specify the attributes of the class. Eg. user has name, user has communites, etc.
 
- Software Architecture Diagram 
  [2 marks: The Architecture Diagram is present, it is not formatted well, or it does not follow a known Architecture diagram.
  A web link or reference has been provided, but it does not support the used architecture]

Problems with diagram:
- You definitely need more than 1 controller for this project. As we are following the MVC pattern, it is convention to have 1 model per controller.

  
